{"version":3,"sources":["constants/actionTypes.js","actions/counterActions.js","App.js","index.js"],"names":["actionTypes","INCREMENT","DECREMENT","RESET","increment","amount","type","decrement","reset","initialState","count","store","createStore","state","action","App","_this","refs","value","dispatch","_this2","this","subscribe","forceUpdate","getState","react_default","a","createElement","onClick","defaultValue","ref","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"oNAAeA,EACF,YADEA,EAEF,YAFEA,EAGN,QCDFC,EAA+BD,EAApBE,EAAoBF,EAATG,EAASH,ECG/BC,EAA+BD,EAApBE,EAAoBF,EAATG,EAASH,EAC/BI,EDFkB,SAACC,GAAD,MAAa,CAACC,KAAML,EAAWI,WCEtCE,EDDO,SAACF,GAAD,MAAa,CAACC,KAAMJ,EAAWG,WCC3BG,EDAR,iBAAO,CAACF,KAAMH,ICC7BM,EAAe,CACnBC,MAAO,GAYT,IAAIC,EAAQC,YATZ,SAAkBC,EAAOC,GACvB,OAAOA,EAAOR,MACZ,KAAKL,EAAW,MAAO,CAACS,MAAOG,EAAMH,MAAQI,EAAOT,QACpD,KAAKH,EAAW,MAAO,CAACQ,MAAOG,EAAMH,MAAQI,EAAOT,QACpD,KAAKF,EAAO,OAAOM,EACnB,QAAS,OAAOI,IAIaJ,GAqClBM,6MA7BbX,UAAY,WACV,IAAMC,GAAUW,EAAKC,KAAKZ,OAAOa,MACjCP,EAAMQ,SAASf,EAAUC,OAG3BE,UAAY,WACV,IAAMF,GAAUW,EAAKC,KAAKZ,OAAOa,MACjCP,EAAMQ,SAASZ,EAAUF,OAG3BG,MAAQ,WACNG,EAAMQ,SAASX,yFAfE,IAAAY,EAAAC,KACjBV,EAAMW,UAAU,kBAAMF,EAAKG,iDAkB3B,IAAMb,EAAQC,EAAMa,WAAWd,MAE/B,OACEe,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,QAASP,KAAKd,WAAtB,KACAkB,EAAAC,EAAAC,cAAA,YAAOjB,GACPe,EAAAC,EAAAC,cAAA,UAAQC,QAASP,KAAKjB,WAAtB,KACAqB,EAAAC,EAAAC,cAAA,UAAQC,QAASP,KAAKb,OAAtB,SACAiB,EAAAC,EAAAC,cAAA,sBAAmBF,EAAAC,EAAAC,cAAA,SAAOrB,KAAK,OAAOuB,aAAa,IAAIC,IAAI,mBA7BjDC,aClBlBC,IAASC,OAAOR,EAAAC,EAAAC,cAACO,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.f8361ad7.chunk.js","sourcesContent":["export default {\r\n  INCREMENT: \"INCREMENT\",\r\n  DECREMENT: \"DECREMENT\",\r\n  RESET: \"RESET\"\r\n};","import actionTypes from '../constants/actionTypes';\r\n\r\nconst {INCREMENT, DECREMENT, RESET} = actionTypes;\r\n\r\nexport const increment = (amount) => ({type: INCREMENT, amount});\r\nexport const decrement = (amount) => ({type: DECREMENT, amount});\r\nexport const reset = () => ({type: RESET});","import React, { Component } from 'react';\nimport {createStore} from 'redux';\nimport actionTypes from './constants/actionTypes';\nimport * as actions from './actions/counterActions';\n\nconst {INCREMENT, DECREMENT, RESET} = actionTypes;\nconst {increment, decrement, reset} = actions;\nconst initialState = {\n  count: 0\n};\n\nfunction reducer (state, action) {\n  switch(action.type) {\n    case INCREMENT: return {count: state.count + action.amount}\n    case DECREMENT: return {count: state.count - action.amount}\n    case RESET: return initialState\n    default: return state\n  }\n}\n\nlet store = createStore(reducer, initialState);\n\nclass App extends Component {\n\n  componentDidMount(){\n    store.subscribe(() => this.forceUpdate());\n  }\n\n  increment = () => {\n    const amount = +this.refs.amount.value;\n    store.dispatch(increment(amount));\n  }\n\n  decrement = () => {\n    const amount = +this.refs.amount.value;\n    store.dispatch(decrement(amount));\n  }\n\n  reset = () => {    \n    store.dispatch(reset());\n  }\n\n  render() {\n    const count = store.getState().count;\n\n    return (\n      <div>\n        <button onClick={this.decrement}>-</button>\n        <span>{count}</span>\n        <button onClick={this.increment}>+</button>\n        <button onClick={this.reset}>reset</button>\n        <span>Step: </span><input type=\"text\" defaultValue=\"3\" ref=\"amount\"/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}