{"version":3,"sources":["actions/counterActions.js","reducers/countReducer.js","store/store.js","App.js","index.js"],"names":["INCREMENT","DECREMENT","RESET","reducer","state","action","type","count","amount","initialState","store","createStore","App","step","increment","_this","props","decrement","handleChange","e","setState","target","value","_this$props","this","reset","react_default","a","createElement","onClick","defaultValue","onChange","Component","connect","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"uLAAaA,EAAY,YACZC,EAAY,YACZC,EAAQ,QCcNC,MAbf,SAAiBC,EAAOC,GACtB,OAAQA,EAAOC,MACb,KAAKN,EACH,MAAO,CAAEO,MAAOH,EAAMG,MAAQF,EAAOG,QACvC,KAAKP,EACH,MAAO,CAAEM,MAAOH,EAAMG,MAAQF,EAAOG,QACvC,KAAKN,EACH,OAAOO,EACT,QACE,OAAOL,ICTAK,EAAe,CAC1BF,MAAO,GAKMG,EAFHC,YAAYR,EAASM,2CCH3BG,6MACJR,MAAQ,CACNS,KAAM,KAERC,UAAY,WACVC,EAAKC,MAAMF,UAAUC,EAAKX,MAAMS,SAGlCI,UAAY,WACVF,EAAKC,MAAMC,UAAUF,EAAKX,MAAMS,SAElCK,aAAe,SAAAC,GACbJ,EAAKK,SAAS,CACZP,MAAOM,EAAEE,OAAOC,iFAIX,IAAAC,EACkBC,KAAKR,MAAtBT,EADDgB,EACChB,MAAOkB,EADRF,EACQE,MACf,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,QAASL,KAAKP,WAAtB,KACAS,EAAAC,EAAAC,cAAA,YAAOrB,GACPmB,EAAAC,EAAAC,cAAA,UAAQC,QAASL,KAAKV,WAAtB,KACAY,EAAAC,EAAAC,cAAA,UAAQC,QAASJ,GAAjB,SACAC,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SACEtB,KAAK,OACLwB,aAAcN,KAAKpB,MAAMS,KACzBkB,SAAUP,KAAKN,uBA7BPc,aAoCHC,cACb,SAAA7B,GAAK,OAAIA,GACT,CAAEU,UHtCqB,SAAAN,GAAM,MAAK,CAClCF,KAAMN,EACNQ,WGoCaS,UHlCU,SAAAT,GAAM,MAAK,CAClCF,KAAML,EACNO,WGgCwBiB,MH9BL,iBAAO,CAC1BnB,KAAMJ,KG2BO+B,CAGbrB,GCpCFsB,IAASC,OACPT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAU1B,MAAOA,GACfgB,EAAAC,EAAAC,cAACS,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.a92e2120.chunk.js","sourcesContent":["export const INCREMENT = \"INCREMENT\";\r\nexport const DECREMENT = \"DECREMENT\";\r\nexport const RESET = \"RESET\";\r\n\r\nexport const increment = amount => ({\r\n  type: INCREMENT,\r\n  amount\r\n});\r\nexport const decrement = amount => ({\r\n  type: DECREMENT,\r\n  amount\r\n});\r\nexport const reset = () => ({\r\n  type: RESET\r\n});\r\n","import { INCREMENT, DECREMENT, RESET } from \"../actions/counterActions\";\r\nimport { initialState } from \"../store/store\";\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case INCREMENT:\r\n      return { count: state.count + action.amount };\r\n    case DECREMENT:\r\n      return { count: state.count - action.amount };\r\n    case RESET:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"../reducers/countReducer\";\r\n\r\nexport const initialState = {\r\n  count: 0\r\n};\r\n\r\nlet store = createStore(reducer, initialState);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { increment, decrement, reset } from \"./actions/counterActions\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    step: 3\r\n  };\r\n  increment = () => {\r\n    this.props.increment(this.state.step);\r\n  };\r\n\r\n  decrement = () => {\r\n    this.props.decrement(this.state.step);\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      step: +e.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { count, reset } = this.props;\r\n    return (\r\n      <div>\r\n        <button onClick={this.decrement}>-</button>\r\n        <span>{count}</span>\r\n        <button onClick={this.increment}>+</button>\r\n        <button onClick={reset}>reset</button>\r\n        <span>Step: </span>\r\n        <input\r\n          type=\"text\"\r\n          defaultValue={this.state.step}\r\n          onChange={this.handleChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => state,\r\n  { increment, decrement, reset }\r\n)(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}